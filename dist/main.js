!function(e){var t={};function a(i){if(t[i])return t[i].exports;var s=t[i]={i:i,l:!1,exports:{}};return e[i].call(s.exports,s,s.exports,a),s.l=!0,s.exports}a.m=e,a.c=t,a.d=function(e,t,i){a.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:i})},a.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},a.t=function(e,t){if(1&t&&(e=a(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var i=Object.create(null);if(a.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var s in e)a.d(i,s,function(t){return e[t]}.bind(null,s));return i},a.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return a.d(t,"a",t),t},a.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},a.p="/",a(a.s=0)}([function(e,t,a){"use strict";a.r(t);var i={level:1,levelProgress:0,levelProgressEnd:80,health:100,maxHealth:100,mana:50,maxMana:50,regenHealth:1,regenMana:1,goldCount:50,crystalsCount:5,kills:0,currentLocation:"Заброшенный лес",currentEnemy:null,locationIndex:0,locationImage:["img/menu.jpg"],currentBoss:0,boss:[{name:"Острый глаз",requireLevel:2,requireGold:50,requireCrystals:5}],enemies:[[{name:"Тыквоголов",level:1,health:140,mana:40,image:"img/enemy/pumpkin.jpg",attacksChance:[30,30,40],reward:{exp:10,gold:[5,3],crystals:1},attacks:[{damage:[0],attackArea:[-1],position:0,name:"Прыжок",chance:10},{damage:[0],attackArea:[-1],position:2,name:"Присед",chance:10},{damage:[10,15],attackArea:[1,2],attackType:2,position:1,name:"Удар по корпусу",chance:25},{damage:[10,15],attackArea:[0,1],attackType:1,position:1,name:"Удар в голову",chance:20},{damage:[0],attackArea:[-1],position:1,blockType:1,blockPercentage:70,name:"Верхний блок",chance:15},{damage:[0],attackArea:[-1],position:1,name:"magic",chance:20,magic:[{damage:[0],attackArea:[-1],position:1,name:"Устрашающий вид",chance:100,manaRequired:5,type:0,turns:4,id:"fear",image:"fear.jpg",text:"Тыквоголов приобретает демонический вид, что сбивает противников с толку и они теряют уверенность. -30% урона ко всем атакам.",effects:{enemyDamage:-.4}}]}]}]]};var s=class{constructor(e,t,a){this.name=e,this.card=document.querySelector(t),this.image=this.card.querySelector("img"),this.setImage(a),this.healthValue=100,this.healthMaxValue=this.healthValue,this.manaValue=100,this.manaMaxValue=this.manaValue,this.action=document.querySelector(`.${this.name}-action`),this.healthbar=document.querySelector(`.${this.name}-healthbar`),this.manabar=document.querySelector(`.${this.name}-manabar`),this.health=document.querySelector(`.${this.name}-health`),this.mana=document.querySelector(`.${this.name}-mana`),this.healthFill=document.querySelector(`.${this.name}-health-fill`),this.manaFill=document.querySelector(`.${this.name}-mana-fill`),this.cardImage=document.querySelector(`.${this.name}-card`),this.attack=null,this.activeMagic=[],this.abilities=document.querySelector(`.${this.name}-abilities`),this.abilityBlocks=this.abilities.querySelectorAll(`.${this.name}-abilities .ability`),this.activeAbilities={enemyDamage:1},this.controls={KeyW:{damage:[0],attackArea:[-1],position:0,name:"Прыжок"},KeyS:{damage:[0],attackArea:[-1],position:2,name:"Присед"},KeyF:{damage:[10,15],attackArea:[0,1],attackType:1,position:1,name:"Удар в голову"},KeyG:{damage:[10,15],attackArea:[1,2],attackType:2,position:1,name:"Удар по корпусу"},KeyH:{damage:[15,10],attackArea:[1,0],attackType:1,position:0,name:"Удар в прыжке"},KeyJ:{damage:[10,5],attackArea:[1,2],attackType:3,position:2,name:"Подножка"},KeyZ:{damage:[0],attackArea:[-1],position:1,blockType:1,blockPercentage:70,name:"Верхний блок"},KeyX:{damage:[0],attackArea:[-1],position:1,blockType:2,blockPercentage:70,name:"Блок"},KeyC:{damage:[0],attackArea:[-1],position:1,blockType:3,blockPercentage:70,name:"Нижний блок"},KeyL:{damage:[0],attackArea:[-1],position:1,name:"Ничего не делать"}}}updateAISettings(e){this.controls=e.attacks,this.healthValue=e.health,this.manaValue=e.mana,this.healthMaxValue=e.health,this.manaMaxValue=e.mana,this.setImage(e.image)}getAIAttackCode(){let e=this.randomize(this.controls);if("magic"===e.name){let t=e.magic.slice(),a=100;for(let i=0;i<e.magic.length;i++){let s=this.randomize(t,a);if(!(this.isInArray(s.id)||this.manaValue<s.manaRequired)){this.setMana(this.manaValue-=s.manaRequired),this.addAbility(s),e=s;break}if(t.splice(t.indexOf(s),1),a-=s.chance,i===e.magic.length-1){let t=this.controls.slice(),a=100-t[t.length-1].chance;t.splice(t.length-1,1),e=this.randomize(t,a);break}}}return e}isInArray(e){let t=!1;return this.activeMagic.forEach((function(a){a.id===e&&(t=!0)})),t}addAbility(e){this.activeMagic.push(e),this.updateAbilitiesCells(),this.updateActiveAbilities()}updateAbilitiesCells(){for(let e=0;e<this.abilityBlocks.length;e++)this.activeMagic[e]?this.abilityBlocks[this.abilityBlocks.length-1-e].style.background=`url(img/abilities/${this.activeMagic[e].image})`:this.abilityBlocks[this.abilityBlocks.length-1-e].style.background="url('')"}updateActiveAbilities(){this.activeAbilities={enemyDamage:1};let e=this;this.activeMagic.forEach((function(t){for(let a in t.effects)e.activeAbilities[a]=e.activeAbilities[a]+t.effects[a]}))}checkActiveAbilities(){let e=this;this.activeMagic.forEach((function(t,a){t.turns--,t.turns<=0&&(e.activeMagic.splice(a,1),e.updateAbilitiesCells(),e.updateActiveAbilities())}))}clearAbilities(){this.activeMagic=[],this.updateAbilitiesCells(),this.updateActiveAbilities()}randomize(e,t=100){let a=Math.floor(Math.random()*(t+1)),i=0,s=null;for(let t=0;t<e.length;t++){if(a<=e[t].chance+i){s=Object.assign({},e[t]);break}i+=e[t].chance}return s}updateHealth(e){this.healthValue+=e,this.health.innerHTML=e,this.setHealth(this.healthValue)}getHealth(){return this.healthValue}setHealth(e){this.healthValue=e,this.healthValue>0?(this.healthbar.innerHTML=e+" / "+this.healthMaxValue,this.healthFill.style.width=100*e/this.healthMaxValue+"%"):(this.healthbar.innerHTML="0 / "+this.healthMaxValue,this.healthFill.style.width="0%")}setMana(e){this.manaValue=e,this.manaValue>0?(this.manabar.innerHTML=e+" / "+this.manaMaxValue,this.manaFill.style.width=100*e/this.manaMaxValue+"%"):(this.manabar.innerHTML="0 / "+this.manaMaxValue,this.manaFill.style.width="0%")}reset(){this.setAttack({position:1,damage:[0],attackArea:[0]}),this.showDamage("hide"),this.checkActiveAbilities(),setTimeout(()=>{this.health.innerHTML=0},300)}setAttack(e){this.attack=e}showDamage(e="show"){"show"===e?this.health.classList.add("active"):this.health.classList.remove("active")}changeAction(e="show"){"show"===e?this.action.classList.add("active"):this.action.classList.remove("active")}setImage(e){this.image.setAttribute("src",e)}turn(e){e?this.cardImage.classList.add("active"):this.cardImage.classList.remove("active")}init(e=null){}};const r=new class{constructor(e){this.stats=e,this.health=document.querySelector(".js-health"),this.mana=document.querySelector(".js-mana"),this.gold=document.querySelector(".js-gold"),this.crystals=document.querySelector(".js-crystals"),this.kills=document.querySelector(".js-kills"),this.level=document.querySelector(".js-level"),this.levelProgress=document.querySelector(".js-level-progress"),this.levelProgressFill=document.querySelector(".js-level-fill"),this.currentLocation=document.querySelector(".js-location"),this.stage=document.querySelector(".stage"),this.bossRequireLevel=document.querySelector(".js-boss-level"),this.bossRequireGold=document.querySelector(".js-boss-gold"),this.bossRequireCrystals=document.querySelector(".js-boss-crystals"),this.gameHealth=document.querySelector(".player1-healthbar"),this.gameHealthProgress=document.querySelector(".player1-health-fill"),this.gameMana=document.querySelector(".player1-manabar"),this.gameManaProgress=document.querySelector(".player1-mana-fill"),this.stageName=document.querySelector(".js-stage-name"),this.stageLevel=document.querySelector(".js-stage-level"),this.enemyHealth=document.querySelector(".js-enemy-health"),this.enemyMana=document.querySelector(".js-enemy-mana")}updateMenu(){this.health.innerHTML=this.stats.health,this.mana.innerHTML=this.stats.mana,this.gold.innerHTML=this.stats.goldCount,this.crystals.innerHTML=this.stats.crystalsCount,this.kills.innerHTML=this.stats.kills,this.level.innerHTML="Уровень "+this.stats.level,this.levelProgress.innerHTML=this.stats.levelProgress+" / "+this.stats.levelProgressEnd,this.currentLocation.innerHTML=this.stats.currentLocation,this.levelProgressFill.style.width=100*this.stats.levelProgress/this.stats.levelProgressEnd+"%",this.bossRequireLevel.innerHTML=this.stats.boss[this.stats.currentBoss].requireLevel,this.bossRequireGold.innerHTML=this.stats.boss[this.stats.currentBoss].requireGold,this.bossRequireCrystals.innerHTML=this.stats.boss[this.stats.currentBoss].requireCrystals}updateGame(){this.gameHealth.innerHTML=this.stats.health+" / "+this.stats.maxHealth,this.gameHealthProgress.style.width=100*this.stats.health/this.stats.maxHealth+"%",this.gameMana.innerHTML=this.stats.mana+" / "+this.stats.maxMana,this.gameManaProgress.style.width=100*this.stats.mana/this.stats.maxMana+"%",this.stageName.innerHTML=this.stats.currentEnemy.name,this.stageLevel.innerHTML="Уровень "+this.stats.currentEnemy.level,this.enemyHealth.innerHTML=this.stats.currentEnemy.health+" / "+this.stats.currentEnemy.health,this.enemyMana.innerHTML=this.stats.currentEnemy.mana+" / "+this.stats.currentEnemy.mana,this.stage.style.background="url("+this.stats.locationImage[this.stats.locationIndex]+")"}}(i),n=document.querySelector(".game"),l=document.querySelector(".js-final-text"),h=document.querySelector(".js-find-enemy");const c=new s("player1",".player-1","img/player/1.jpg"),o=new s("player2",".player-2",""),u=new class{constructor(e,t,a,i){this.player1=e,this.player2=t,this.currentPlayer=e,this.currentTurnPlayer=e,this.view=i,this.config=a,this.fullTurn=0,this.canTurn=!0,this.turnTimer=null,this.play=!1,this.view.updateMenu()}makeTurn(e){let t=this.convertAttack(e);if(!t)return!1;clearTimeout(this.turnTimer),this.currentPlayer.setAttack(t),this.currentPlayer.changeAction(),this.currentPlayer.action.innerHTML=t.name,this.fullTurn++,this.fullTurn>=2?this.endTurn():(this.changePlayer(),this.turnTimer=setTimeout(()=>{this.makeTurn("KeyL"),this.endTurn()},1e3))}convertAttack(e){return"string"==typeof e?!!this.currentPlayer.controls[e]&&this.currentPlayer.controls[e]:e}endTurn(){clearTimeout(this.turnTimer),this.canTurn=!1,this.turnTimer=setTimeout(()=>{this.calculateDamage(this.player1.attack,this.player2.attack),this.turnTimer=setTimeout(()=>{this.player1.changeAction("hide"),this.player2.changeAction("hide"),this.player1.turn(!1),this.player2.turn(!1),this.turnTimer=setTimeout(()=>{this.player1.reset(),this.player2.reset(),this.changeTurnPlayer(),this.currentPlayer=this.currentTurnPlayer},300)},800)},400),this.fullTurn=0}calculateDamage(e,t){let a=this.player1,i=this.player2;for(let s=0;s<2;s++)if(s>0&&([e,t]=[t,e],[a,i]=[i,a]),e)for(let a=0;a<e.attackArea.length;a++)if(e.attackArea[a]===t.position){t.blockType&&t.blockType===e.attackType?i.updateHealth(Math.floor((-e.damage[a]+e.damage[a]*t.blockPercentage/100)*i.activeAbilities.enemyDamage)):i.updateHealth(Math.floor(-e.damage[a]*i.activeAbilities.enemyDamage));break}this.player1.showDamage(),this.player2.showDamage(),this.checkWinner()}checkWinner(){(this.player1.getHealth()<=0||this.player2.getHealth()<=0)&&(n.classList.add("completed"),u.pauseGame(),this.player1.getHealth()<=0?l.innerHTML="Вы потерпели неудачу!":(l.innerHTML=this.config.currentEnemy.name+" повержен!",this.config.levelProgress+=this.config.currentEnemy.reward.exp,this.config.goldCount+=Math.floor(this.config.currentEnemy.reward.gold[0]+Math.random()*this.config.currentEnemy.reward.gold[1]),this.config.crystalsCount+=this.config.currentEnemy.reward.crystals,this.config.kills++,this.config.levelProgress>=this.config.levelProgressEnd&&(this.config.levelProgress-=this.config.levelProgressEnd,this.config.level++,this.config.levelProgressEnd+=this.config.levelProgressEnd/2)))}changePlayer(){"player1"===this.currentPlayer.name?(this.currentPlayer=this.player2,this.player2.turn(!0),this.player1.turn(!1),this.canTurn=!1,this.makeAITurn()):(this.canTurn=!0,this.currentPlayer=this.player1,this.player2.turn(!1),this.player1.turn(!0))}changeTurnPlayer(){"player1"===this.currentTurnPlayer.name?this.play&&(this.currentTurnPlayer=this.player2,this.player2.turn(!0),this.makeAITurn()):(this.canTurn=!0,this.play&&(this.currentTurnPlayer=this.player1,this.player1.turn(!0),this.turnTimer=setTimeout(()=>{this.makeTurn("KeyL")},1e3)))}makeAITurn(){this.canTurn=!1,setTimeout(()=>{this.play&&this.makeTurn(this.currentPlayer.getAIAttackCode())},500)}restart(){this.player1.setHealth(this.config.maxHealth),this.player2.setHealth(this.config.currentEnemy.health),this.player1.setMana(this.config.maxMana),this.player2.setMana(this.config.currentEnemy.mana),this.currentPlayer=c,this.currentTurnPlayer=c,this.fullTurn=0,this.canTurn=!0,this.player1.turn(!0),this.player2.turn(!1),this.player1.changeAction("hide"),this.player2.changeAction("hide"),this.player1.reset(),this.player2.reset(),this.pauseGame(),clearTimeout(this.turnTimer)}goMenu(){n.classList.remove("play"),n.classList.remove("completed"),this.player1.clearAbilities(),this.player2.clearAbilities(),this.restart(),this.view.updateMenu()}startGame(){n.classList.add("play"),this.play=!0,this.canTurn=!0;let e=Math.floor(Math.random()*this.config.enemies[this.config.locationIndex].length),t=this.config.enemies[this.config.locationIndex][e];this.config.currentEnemy=t,this.player2.setImage(""),this.player2.updateAISettings(t),this.view.updateGame()}playGame(){this.play=!0}pauseGame(){this.play=!1}}(c,o,i,r);document.addEventListener("keydown",e=>{"KeyR"===e.code?(n.classList.remove("completed"),u.restart(),u.playGame()):"KeyP"===e.code?u.pauseGame():"KeyM"===e.code?u.goMenu():u.play&&u.canTurn&&"player1"===u.currentPlayer.name&&u.makeTurn(e.code)}),h.addEventListener("click",e=>{u.startGame()})}]);